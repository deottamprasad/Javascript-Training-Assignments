let users = [{
"id": 1,
"first_name": "Nicki",
"email": "ncrozier0@squarespace.com",
"date_of_birth": "2009/05/09",
"gender":"Male",
}, {
"id": 2,
"first_name": "Raychel",
"email": "rmcgrady1@cpanel.net",
"date_of_birth": "1996/11/05",
  "gender":"Female"
}, {
"id": 3,
"first_name": "Demetris",
"email": "dkilshall2@elpais.com",
"date_of_birth": "2018/12/31",
  "gender":"Male"
}, {
"id": 4,
"first_name": "Amata",
"email": "abraiden3@canalblog.com",
"date_of_birth": "2012/05/23",
  "gender":"Female"
}];

function groupBy(users, key) {
 return users.reduce((acc, obj) => {
      let x = obj[key];
      if (!acc[x]) {
         acc[x] = [];
      }
      // Add object to list for given key's value
      acc[x].push(obj);
      return acc;
   }, {});
}

console.log(groupBy(users, "gender"));
/* Output :-
{Male: Array(2), Female: Array(2)}
Female: Array(2)
0: {id: 2, first_name: 'Raychel', email: 'rmcgrady1@cpanel.net', date_of_birth: '1996/11/05', gender: 'Female'}
1: {id: 4, first_name: 'Amata', email: 'abraiden3@canalblog.com', date_of_birth: '2012/05/23', gender: 'Female'}
length: 2
[[Prototype]]: Array(0)
Male: Array(2)
0: {id: 1, first_name: 'Nicki', email: 'ncrozier0@squarespace.com', date_of_birth: '2009/05/09', gender: 'Male'}
1: {id: 3, first_name: 'Demetris', email: 'dkilshall2@elpais.com', date_of_birth: '2018/12/31', gender: 'Male'}
length: 2
[[Prototype]]: Array(0)
[[Prototype]]: Object
*/

//So, here I have used reduce() to create an object which contains objects based on the specified key. In the reduce(), I have created a function which first creates the key x based on the specified key's value in the object and then if this key is not present in the object, then we first assign an empty array to the key and push the object in that array, otherwise I just simply push the object in the array.